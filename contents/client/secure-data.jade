:markdown
  ## Secure data storage

  As explained in our [encryption guide](/docs/overview/encryption) we encrypt your emails using a public-private key pair which is generated 
  by the client app. We generate this key pair once and then store it safely within what's known as your local _keychain_. Your keychain 
  contains your keys as well as the public keys for people who you communicate with.

  Your keychain has to stored securely on your device - someone who gains access to your device's hard drive should not be able to find out 
  what your encryption keys are. Thus the Autonomail app has a secure data storage layer where it stores your keychain. Everything within this 
  storage layer is encrypted with a key derived from your email password. This encryption key is totally separate and unrelated to the 
  encryption keys used to encrypt your email messages. We backup this encrypted secure storage layer to our server.
  
  ### Technical details

  The keychain referred to above is actually comprised of the raw content of the [GPG2]() keyrings and trust database files. These get created 
  in a virtual memory-based filesystem by the [Emcripten port of GPG2]() that we run. We then store the contents of these 'files' into the 
  secure data storage layer.

  The secure data storage layer is encrypted using [AES-256](). The key used for this encryption is derived as follows:

  1. Use the [Fortuna PRNG]() to generate a 256-bit `salt`. 
  1. Input `salt` + `user's password` into [PBKDF2]() + [SHA512]() for `n` iterations, where `n` is chosen such that the total key derivation 
  process lasts 1 second. Typically `n` is well above 10,000.
  1. Take the first 256 bits of derived key and use as the secure data storage encryption key.

  _(Note: implementations of the above cryptography algorithms are provided by [SJCL](http://bitwiseshiftleft.github.io/sjcl/))_

  The user is shown the value of `n` used. Next time they login they must input both their password and this value of `n` in order to be able 
  decrypt the secure data storage layer and thus access their email encryption keys (and thus be able to read their encrypted emails). 

  The secure data storage layer ciphertext and the `salt` which was used as input to the key derivation process are both backed up to the 
  Autonomail server. Having these backed up is useful in case the user resets their device, re-installs the client app or switches to using 
  Autonomail on another device. Even if an attacker gains access to the server, note that they do not know the user's password, the 
  encryption key or the iteration count (`n` above), making brute force decryption attacks extremely difficult.